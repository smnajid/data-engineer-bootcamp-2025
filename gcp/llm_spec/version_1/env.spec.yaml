project:
  project_id: "learn-de-zoomcamp-2025"
  create_project: false
  enable_apis:
    - compute.googleapis.com
    - storage-component.googleapis.com
    - bigquery.googleapis.com

locations:
  region: "europe-west6"
  zones:
    - "europe-west6-a"

state_backend:
  type: "gcs"
  bucket: "tf-state-learn-de-zoomcamp-2025"
  prefix: "infra/dev"
  project: "learn-de-zoomcamp-2025"

identity:
  iam_bindings: []

data_platform:
  gcs_buckets:
    - name: "mohamed-de-zoomcamp-2025-data-lake"
      location: "EUROPE-WEST6"
      uniform_bucket_level_access: true
      versioning: true
      retention_policy_days: 30
  bigquery:
    datasets:
      - dataset_id: "de_zoomcamp_dataset"
        location: "europe-west6"
        default_table_expiration_ms: 3600000
  pubsub:
    topics: []

runtime:
  cloud_run_services: []
  gke_clusters: []
  gce_instances:
    - name: "learn-de-zoomcamp-2025-vm"
      machine_type: "e2-standard-2"
      zone: "europe-west6-a"
      boot_disk:
        size_gb: 30
        type: "pd-balanced"
        image_family: "debian-12"
        image_project: "debian-cloud"
      # Minimal startup script - just installs Ansible and creates ansible user
      startup_script: |
        #!/bin/bash
        set -e
        export DEBIAN_FRONTEND=noninteractive
        
        # Update system and install basic tools
        apt-get update
        apt-get upgrade -y
        apt-get install -y curl wget git vim htop tree unzip jq ca-certificates gnupg lsb-release apt-transport-https build-essential software-properties-common tmux make python3 python3-pip
        
        # Install Ansible
        pip3 install ansible
        
        # Create ansible user for configuration management
        useradd -m -s /bin/bash ansible
        usermod -aG sudo ansible
        echo 'ansible ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
        
        # Create directory for Ansible playbooks
        mkdir -p /opt/ansible
        chown ansible:ansible /opt/ansible
        
        echo "VM ready for Ansible configuration!"

configuration_management:
  type: "ansible"
  playbooks:
    - name: "setup-dev-environment"
      description: "Development environment setup with Docker, Miniconda, and GCP SDK"
      roles:
        - "common-tools"
        - "docker"
        - "miniconda"
        - "gcloud-sdk"
  inventory:
    type: "dynamic"
    source: "terraform_output"
  ssh_key_management:
    type: "gcp_metadata"
    user: "ansible"

policies:
  prevent_destroy_critical: true
  default_kms_key: null


